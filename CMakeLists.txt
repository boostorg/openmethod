# Generated by `boostdep --cmake openmethod`
# Copyright 2020, 2021 Peter Dimov
# Distributed under the Boost Software License, Version 1.0.
# https://www.boost.org/LICENSE_1_0.txt

cmake_minimum_required(VERSION 3.5...3.20)

project(boost_openmethod VERSION "${BOOST_SUPERPROJECT_VERSION}" LANGUAGES CXX)

set(BOOST_OPENMETHOD_IS_ROOT OFF)
if(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
    set(BOOST_OPENMETHOD_IS_ROOT ON)
endif()

if(BOOST_OPENMETHOD_IS_ROOT)
    include(CTest)
endif()
if(NOT BOOST_SUPERPROJECT_VERSION)
    option(BOOST_OPENMETHOD_INSTALL "Install boost::openmethod files" ON)
    option(BOOST_OPENMETHOD_BUILD_TESTS "Build boost::openmethod tests" ${BUILD_TESTING})
    option(BOOST_OPENMETHOD_BUILD_EXAMPLES "Build boost::openmethod examples" ${BOOST_OPENMETHOD_IS_ROOT})
else()
    set(BOOST_OPENMETHOD_BUILD_TESTS ${BUILD_TESTING})
endif()

if(BOOST_OPENMETHOD_IS_ROOT)
    #
    # Building inside Boost tree, but as a separate project e.g. on Travis or
    # other CI, or when producing Visual Studio Solution and Projects.

    set(BOOST_INCLUDE_LIBRARIES openmethod)
    set(BOOST_EXCLUDE_LIBRARIES openmethod)
    list(APPEND BOOST_INCLUDE_LIBRARIES test)
    if(BOOST_OPENMETHOD_BUILD_EXAMPLES)
        # list(APPEND BOOST_INCLUDE_LIBRARIES optional)
    endif()

    set(CMAKE_FOLDER _deps)
    add_subdirectory(../.. _deps/boost EXCLUDE_FROM_ALL)
    unset(CMAKE_FOLDER)
endif()

add_library(boost_openmethod INTERFACE)
add_library(Boost::openmethod ALIAS boost_openmethod)

target_compile_features(boost_openmethod INTERFACE cxx_std_17)

target_include_directories(boost_openmethod INTERFACE include)

target_link_libraries(
  boost_openmethod
  INTERFACE
    Boost::assert
    Boost::config
    Boost::core
    Boost::dynamic_bitset
    Boost::mp11
    Boost::preprocessor
)

if(BOOST_OPENMETHOD_BUILD_TESTS)
  enable_testing()
  add_subdirectory(test)
endif()

if(BOOST_OPENMETHOD_BUILD_EXAMPLES)
  add_subdirectory(example)
endif()
